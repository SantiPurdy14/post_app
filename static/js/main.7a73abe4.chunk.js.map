{"version":3,"sources":["App/Views/Login/Login.js","App/Api/api.js","App/Api/comment.js","App/Api/user.js","App/Api/tag.js","App/Views/Home/Home.js","App/Api/post.js","Router.js","App.js","reportWebVitals.js","index.js"],"names":["Login","state","sessionStorage","getItem","to","className","src","clientId","buttonText","onSuccess","response","setItem","JSON","stringify","window","location","reload","onFailure","console","log","cookiePolicy","Component","api","axios","create","baseURL","interceptors","request","use","a","config","headers","Promise","reject","error","ListComment","id","get","FullUser","ListPostTag","tag","styles","fontFamily","textAlign","Home","post","openComments","openUser","comments","fullUser","onOpenModalComments","ListComments","resolve","then","res","dataPostComments","data","setState","catch","onCloseModalComments","onOpenModalUser","User","dataPostUser","onCloseModalUser","searchPost","event","search","target","value","postTag","dataPostTag","ListPosts","dataPost","this","posts","map","row","owner","picture","onClick","firstName","lastName","image","likes","tags","join","text","placeholder","onChange","style","open","onClose","center","length","element","message","gender","dateOfBirth","email","phone","Routers","userLogged","user","parse","profileObj","basename","process","imageUrl","name","exact","path","component","App","Router","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a73abe4.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport GoogleLogin from 'react-google-login';\nimport { Redirect } from 'react-router-dom';\nimport App from '../../../App';\nimport './Login.css';\n\nclass Login extends Component {\n    state = {};\n\n    render() {\n        const onSuccess = (response) => {\n            sessionStorage.setItem('TokenSession', JSON.stringify(response));\n            window.location.reload(<App />);\n        }\n\n        const onFailure = (response) => {\n            console.log(response)\n        }\n\n        if (sessionStorage.getItem('TokenSession')) {\n            return (<Redirect to={'/home/'} />);\n        }\n\n        return (\n            <div className='login'>\n                <img src='https://titamedia.com/wp-content/uploads/2021/01/liga-tita@2x.png' />\n                <h1>Iniciar sesion</h1>\n                <div className='login-two'>\n                <GoogleLogin\n                    clientId=\"874043082508-4h9lc7pk81cnso35k2r2n39kogjriek9.apps.googleusercontent.com\"\n                    buttonText=\"Login\"\n                    onSuccess={onSuccess}\n                    onFailure={onFailure}\n                    cookiePolicy={'single_host_origin'}\n                />\n                </div>\n            </div>\n        );\n    }\n\n}\nexport default Login","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://ec2-18-223-143-226.us-east-2.compute.amazonaws.com/'\n});\n\napi.interceptors.request.use(\n  async (config) => {\n    try {\n        config.headers['app-id'] = `6168e7aad4e9b572ba9ec413` ;\n      return config;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\nexport default api;","import api from './api';\n\nexport const ListComment = (id) =>  api.get(`https://dummyapi.io/data/v1/post/${id}/comment?limit=10`);\n\n","import api from './api';\n\nexport const FullUser = (id) =>  api.get(`https://dummyapi.io/data/v1/user/${id}`);","import api from './api';\n\nexport const ListPostTag = (tag) =>  api.get(`https://dummyapi.io/data/v1/tag/${tag}/post?limit=10`);\n\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { ListPost } from '../../Api/post';\nimport { ListComment } from '../../Api/comment';\nimport { FullUser } from '../../Api/user';\nimport { ListPostTag } from '../../Api/tag';\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport './Home.css';\nimport '../../Components/Card/Card.css'\n\nconst styles = {\n    fontFamily: \"sans-serif\",\n    textAlign: \"center\"\n};\n\nclass Home extends Component {\n    state = {\n        post: [],\n        openComments: false,\n        openUser: false,\n        comments: [],\n        fullUser: []\n    };\n\n    componentDidMount() {\n        if (sessionStorage.getItem('TokenSession')) {\n            const ListPosts = Promise.resolve(ListPost());\n            ListPosts.then((res) => {\n                let dataPost = res.data.data\n                this.setState({ post: dataPost })\n            });\n            ListPosts.catch((error) => {\n            });\n        }\n    }\n\n    onOpenModalComments = (id) => {\n        const ListComments = Promise.resolve(ListComment(id));\n        ListComments.then((res) => {\n            let dataPostComments = res.data.data\n            this.setState({ openComments: true, comments: dataPostComments });\n        });\n        ListComments.catch((error) => {\n        });\n\n    };\n\n    onCloseModalComments = () => {\n        this.setState({ openComments: false });\n    };\n\n    onOpenModalUser = (id) => {\n        const User = Promise.resolve(FullUser(id));\n        User.then((res) => {\n            let dataPostUser = res.data\n            this.setState({ openUser: true, fullUser: dataPostUser });\n        });\n        User.catch((error) => {\n        });\n\n    };\n\n    onCloseModalUser = () => {\n        this.setState({ openUser: false });\n    };\n\n    searchPost = (event) => {\n        \n        this.setState({search: event.target.value});\n        const postTag = Promise.resolve(ListPostTag(event.target.value))\n        postTag.then((res) => {\n            let dataPostTag = res.data.data\n            this.setState({ post: dataPostTag });\n        });\n        postTag.catch((error) => {\n        });\n    }\n\n    render() {\n\n        const { post, openComments, openUser, comments, fullUser, search } = this.state\n\n        let posts = post.map(row => (\n            <div className='card'>\n                <div className='post-user'>\n                    <img src={row.owner.picture} onClick={() => this.onOpenModalUser(row.owner.id)} />\n                    <p onClick={() => this.onOpenModalUser(row.owner.id)}>{`${row.owner.firstName} ${row.owner.lastName} `}</p>\n                </div>\n                <img className='post-img' src={row.image} />\n\n                <div className='post-like'>\n                    <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/220px-Heart_coraz%C3%B3n.svg.png' />\n                    <p>{row.likes}</p>\n                </div>\n                <p className='post-tag'>{`#${row.tags.join(' #')}`}</p>\n                <p>{row.text}</p>\n                <a className='post-comment' onClick={() => this.onOpenModalComments(row.id)}>Ver comentarios</a>\n            </div>\n        ))\n\n        if (!sessionStorage.getItem('TokenSession')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div className='home'>\n                <div className='search'>\n                    <h1>Post</h1>\n                    <input className='input-search' placeholder='Search....' id='search' value={search} onChange={this.searchPost} />\n                </div>\n                <div className='post'>\n                    {posts}\n                </div>\n                <div style={styles}>\n                    <Modal open={openComments} onClose={this.onCloseModalComments} center={true}>\n                        <h2>Comments</h2>\n                        {comments.length !== 0 ?\n                            comments.map(element => (\n                                <div>\n                                    <p><b>{`${element.owner.firstName} ${element.owner.lastName} `}:</b> {element.message}</p>\n\n                                </div>\n                            ))\n                            : <p>No comments</p>}\n                    </Modal>\n                </div>\n                <div style={styles}>\n                    <Modal open={openUser} onClose={this.onCloseModalUser} center={true}>\n                        {fullUser !== [] ?\n                            <div className='user'>\n                                <div>\n                                    <img src={fullUser.picture} />\n                                </div>\n                                <div>\n                                    <h2>{`${fullUser.firstName} ${fullUser.lastName} `}</h2>\n                                    <p><b>Gender:</b> {fullUser.gender}</p>\n                                    <p><b>Date of Bith:</b> {fullUser.dateOfBirth}</p>\n                                    <p><b>Email:</b> {fullUser.email}</p>\n                                    <p><b>Phone:</b> {fullUser.phone}</p>\n                                </div>\n                            </div>\n                            :\n                            <p></p>\n                        }\n                    </Modal>\n                </div>\n            </div>\n\n        );\n    }\n\n}\nexport default Home;","import api from './api';\n\nexport const ListPost = () =>  api.get(`https://dummyapi.io/data/v1/post?limit=10`);\n\n","import React, { Component } from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Login from './App/Views/Login/Login';\nimport Home from './App/Views/Home/Home';\nimport './App/Components/Header/Header.css'\nclass Routers extends Component {\n    state = {\n        userLogged: []\n    };\n\n    componentWillMount() {\n        if (sessionStorage.getItem('TokenSession')) {\n            let user = JSON.parse(sessionStorage.getItem('TokenSession'))\n            this.setState({ userLogged: user.profileObj })\n        }\n    }\n\n    render() {\n\n        const { userLogged } = this.state\n\n        if (!sessionStorage.getItem('TokenSession')) {\n            return (\n                <Router basename={process.env.PUBLIC_URL}>\n                    <div className=\"contenedor\">\n                        <Switch>\n                            <Route exact path=\"/\" component={Login} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/home\" component={Home} />\n                        </Switch>\n                    </div>\n                </Router>\n            );\n        } else {\n            return (\n                <Router basename={process.env.PUBLIC_URL}>\n                    <div className='header'>\n                        <div className='header-logo'>\n                        <img src='https://titamedia.com/wp-content/uploads/2021/01/liga-tita@2x.png' />\n                        </div>\n                        <br/>\n                        <div className='header-user'>\n                            <img src={userLogged.imageUrl} />\n                            <p>{userLogged.name}</p>\n                        </div>\n                    </div>\n                    <div className=\"contenedor\">\n                        <Switch>\n                            <Route exact path=\"/\" component={Login} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/home\" component={Home} />\n                        </Switch>\n                    </div>\n                </Router>\n            );\n        }\n    }\n\n}\nexport default Routers;","import './App.css';\nimport Routers from './Router';\n\nfunction App() {\n  return <Routers />;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}